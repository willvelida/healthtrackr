name: Healthtrackr.Activity

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: 7.0.x
  OUTPUT_PATH: ${{ github.workspace }}/.output
  COVERAGE_PATH: ${{ github.workspace }}/coverage
  COVERAGE_LOCATION: ${{ github.workspace }}/.coverage

on:
  push:
    branches:
      - main
    paths:
      - Healthtrackr.Activity/**
  workflow_dispatch:

permissions:
    id-token: write
    contents: read

jobs:
  build-function:   
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './Healthtrackr.Activity/src/Healthtrackr.Activity/'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4
              
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
        
      - name: 'Install dependencies'
        run: dotnet restore
        
      - name: 'Build project'
        run: dotnet build --no-restore
        
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory ${{ env.COVERAGE_PATH }}

      - name: Merge Code Coverage reports
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator "-reports:${{ env.COVERAGE_PATH }}/**/coverage.cobertura.xml" "-targetdir:${{ env.COVERAGE_PATH }}" -reporttypes:Cobertura

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/Cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      
      - name: Publish Functions
        run: dotnet publish ./Healthtrackr.Activity/Healthtrackr.Activity.csproj --configuration Release --output ${{ env.OUTPUT_PATH }}
              
      - name: Package Functions
        uses: actions/upload-artifact@v3
        with:
            name: activity-function
            path: ${{ env.OUTPUT_PATH }}

  lint:
    runs-on: ubuntu-latest
    needs: build-function
    steps:
      - uses: actions/checkout@v4
      - name: Run Bicep Linter
        run: az bicep build --file ./Healthtrackr.Activity/deploy/main.bicep

  validate:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - uses: azure/arm-deploy@v2
        name: Run preflight validation
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Healthtrackr.Activity/deploy/main.bicep
          parameters: ./Healthtrackr.Activity/deploy/parameters.prod.json sqlAdminLogin=${{ secrets.SQL_ADMIN }} sqlAdminPassword=${{ secrets.SQL_PASSWORD }}
          deploymentMode: Validate

  preview:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: Azure/cli@v1
        name: Run what-if
        with:
          inlineScript: |
            az deployment group what-if --resource-group ${{ secrets.AZURE_RG }} --template-file ./Healthtrackr.Activity/deploy/main.bicep --parameters ./Healthtrackr.Activity/deploy/parameters.prod.json sqlAdminLogin=${{ secrets.SQL_ADMIN }} sqlAdminPassword=${{ secrets.SQL_PASSWORD }}
  deploy-infra:
    runs-on: ubuntu-latest
    environment: Production
    needs: preview
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
      - name: Deploy Bicep File
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Healthtrackr.Activity/deploy/main.bicep
          parameters: ./Healthtrackr.Activity/deploy/parameters.prod.json sqlAdminLogin=${{ secrets.SQL_ADMIN }} sqlAdminPassword=${{ secrets.SQL_PASSWORD }}
          failOnStdErr: false

  deploy-sql-tables:
    needs: deploy-infra
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@v4
      - name: 'Deploy Azure SQL Tables'
        uses: azure/sql-action@v2
        with:
          connection-string: ${{ secrets.AZURE_SQL_CONNECTION }}
          path: './Healthtrackr.Activity/src/Healthtrackr.Activity/Healthtrackr.Activity.Sql/Healthtrackr.Activity.Sql.sqlproj'
          build-arguments: '-c Release'
          action: 'publish'
        
  deploy-function:
      needs: deploy-sql-tables
      runs-on: ubuntu-latest
      env: 
        FUNC_APP_NAME: func-htactivity-prod
            
      steps:
       - name: Download Artifact
         uses: actions/download-artifact@v3
         with:
            name: activity-function
            path: ${{ env.OUTPUT_PATH }}
                
       - name: "Login via Azure CLI"
         uses: azure/login@v1
         with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                
       - name: Deploy Function to Azure
         uses: Azure/functions-action@v1
         with:
            app-name: ${{ env.FUNC_APP_NAME }}
            package: ${{ env.OUTPUT_PATH }}